{
  "name": "rexion",
  "scopeName": "source.rex",
  "fileTypes": ["rex"],
  "patterns": [
    {
      "match": "\\b(func|return|if|else|elif|while|for|in|break|continue)\\b",
      "name": "keyword.control.rexion"
    },
    {
      "match": "\\b(print|input|read|write|exit)\\b",
      "name": "keyword.builtin.rexion"
    },
    {
      "match": "\\b(let|const|var|define|as)\\b",
      "name": "storage.type.rexion"
    },
    {
      "match": "\\b(true|false|null)\\b",
      "name": "constant.language.rexion"
    },
    {
      "match": "\\b(int|float|string|bool|char|void|any)\\b",
      "name": "storage.type.primitive.rexion"
    },
    {
      "match": "\\b(and|or|not|xor)\\b",
      "name": "keyword.operator.logical.rexion"
    },
    {
      "match": "\\b(is|isnot|==|!=|<=|>=|<|>)\\b",
      "name": "keyword.operator.comparison.rexion"
    },
    {
      "match": "\\b(\\+|\\-|\\*|\\/|\\%|\\*\\*)\\b",
      "name": "keyword.operator.arithmetic.rexion"
    },
    {
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()",
      "name": "entity.name.function.rexion"
    },
    {
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
      "name": "variable.other.rexion"
    },
    {
      "match": "\"(\\\\.|[^\"\\\\])*\"",
      "name": "string.quoted.double.rexion"
    },
    {
      "match": "'(\\\\.|[^'\\\\])+'",
      "name": "string.quoted.single.rexion"
    },
    {
      "match": "\\b\\d+\\.\\d+\\b",
      "name": "constant.numeric.float.rexion"
    },
    {
      "match": "\\b\\d+\\b",
      "name": "constant.numeric.integer.rexion"
    },
    {
      "begin": "#",
      "beginCaptures": {
        "0": { "name": "comment.line.number-sign.rexion" }
      },
      "end": "$\\n?",
      "name": "comment.line.rexion"
    },
    {
      "begin": "/\\*",
      "beginCaptures": {
        "0": { "name": "comment.block.start.rexion" }
      },
      "end": "\\*/",
      "endCaptures": {
        "0": { "name": "comment.block.end.rexion" }
      },
      "name": "comment.block.rexion"
    },
    {
      "match": "[\\(\\)\\{\\}\\[\\]]",
      "name": "punctuation.bracket.rexion"
    },
    {
      "match": "[;,\\.]",
      "name": "punctuation.separator.rexion"
    },
    {
      "match": "=",
      "name": "keyword.operator.assignment.rexion"
    }
  ]
}
